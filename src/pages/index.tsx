import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import LoadingSpinner from "~/components/Loading";
import { RouterOutputs, api } from "~/utils/api";

dayjs.extend(relativeTime);

const CreatePostWizzard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex items-center gap-5">
      <Image
        src={user.profileImageUrl}
        alt="user profile image"
        width={50}
        height={50}
        className="rounded-full"
      />

      <input
        type="text"
        className="flex-grow border-none bg-transparent text-slate-400 outline-none"
        placeholder="Type Some Emojis!"
      />

      <SignOutButton>
        <button className="ml-auto rounded-lg bg-slate-200 px-2 py-1 text-black">
          Sing Out
        </button>
      </SignOutButton>
    </div>
  );
};

function LoadingScreen() {
  return (
    <div className="absolute left-0 top-0 grid h-screen w-screen place-content-center">
      <LoadingSpinner size={60} />
    </div>
  );
}

const Feed = () => {
  const { data: postsData, isLoading: postLoading } =
    api.posts.getAll.useQuery();

  if (postLoading) return <LoadingScreen />;

  if (!postsData) return <h1>Something went wrong!</h1>;

  return (
    <div className="flex flex-col">
      {postsData?.map((post) => {
        return <PostView key={post.post.id} PostWithUser={post} />;
      })}
    </div>
  );
};

const Home: NextPage = () => {
  //start fetching asap
  api.posts.getAll.useQuery();

  const { isLoaded: userLoaded, isSignedIn } = useUser();

  //empty div when the user is not loaded
  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Chirp</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <div className="h-screen w-full border-x border-slate-400 md:max-w-2xl">
          <div className="min-h-[70px] border-b border-slate-400 p-4">
            {isSignedIn ? (
              <CreatePostWizzard />
            ) : (
              <div className="flex justify-center">
                <SignInButton>
                  <button className="rounded-lg bg-slate-200 px-4 py-2 text-black">
                    Sing In
                  </button>
                </SignInButton>
              </div>
            )}
          </div>

          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: { PostWithUser: PostWithUser }) => {
  const {
    PostWithUser: { author, post },
  } = props;
  return (
    <div className="flex items-center justify-start gap-6 border-b border-slate-400  px-2 md:py-4">
      <Image
        alt={`${author.username} profile picture`}
        src={author.profileImageUrl}
        width={48}
        height={48}
        className="rounded-full"
      />
      <div className="flex flex-col items-start justify-center">
        <span className="text-xs text-slate-400">
          @{author.username} - {dayjs(post.createdAt).fromNow()}
        </span>
        <span className="text-xl">{post.content}</span>
      </div>
    </div>
  );
};
